schedule_transform_final
schedule_transform_final %>%
filter(Game_Number == 50) %>%
ggplot() +
geom_point(aes(x = Win_Percent_Game,
y = Win_Percent_Final)) +
geom_rect(aes(xmin = -Inf,
xmax = Inf,
ymin = min(Win_Percent_Final),
ymax = min(Win_Percent_Final)),
fill = "#eeeeee",
alpha = 0.5) +
theme_minimal() +
theme(text = element_text(family = "Roboto"),
axis.title = element_text(face = "bold",
size = 10),
axis.text = element_text(face = "italic",
size = 8),
panel.background = element_rect(colour = "#000000"),
strip.text = element_text(face = "bold",
size = 8)) #+
# labs(title = 'Game Number: {frame_time}',
#      x = "Current Win Percent",
#      y = "Final Win Percent") +
# transition_time(Game_Number) +
# ease_aes('linear')
schedule_transform_final %>%
filter(Game_Number == 50) %>%
ggplot() +
geom_point(aes(x = Win_Percent_Game,
y = Win_Percent_Final)) +
geom_rect(aes(xmin = -Inf,
xmax = Inf,
ymin = Win_Percent_Final,
ymax = Win_Percent_Final),
fill = "#eeeeee",
alpha = 0.5) +
theme_minimal() +
theme(text = element_text(family = "Roboto"),
axis.title = element_text(face = "bold",
size = 10),
axis.text = element_text(face = "italic",
size = 8),
panel.background = element_rect(colour = "#000000"),
strip.text = element_text(face = "bold",
size = 8)) #+
# labs(title = 'Game Number: {frame_time}',
#      x = "Current Win Percent",
#      y = "Final Win Percent") +
# transition_time(Game_Number) +
# ease_aes('linear')
?geom_ribbon
schedule_transform_final %>%
filter(Game_Number == 50) %>%
ggplot() +
geom_point(aes(x = Win_Percent_Game,
y = Win_Percent_Final)) +
geom_ribbon(aes(x = Win_Percent_Game,
ymin = min(Win_Percent_Final),
ymax = max(Win_Percent_Final)),
fill = "#eeeeee",
alpha = 0.5) +
theme_minimal() +
theme(text = element_text(family = "Roboto"),
axis.title = element_text(face = "bold",
size = 10),
axis.text = element_text(face = "italic",
size = 8),
panel.background = element_rect(colour = "#000000"),
strip.text = element_text(face = "bold",
size = 8)) #+
# labs(title = 'Game Number: {frame_time}',
#      x = "Current Win Percent",
#      y = "Final Win Percent") +
# transition_time(Game_Number) +
# ease_aes('linear')
(schedule_transform_final <-
schedule_transform %>%
left_join(win_percent_by_team_season) %>%
group_by(Game_Number) %>%
mutate(Win_Percent_Final_Min = min(Win_Percent_Final),
Win_Percent_Final_Max = max(Win_Percent_Final)))
schedule_transform_final %>%
filter(Game_Number == 50) %>%
ggplot() +
geom_point(aes(x = Win_Percent_Game,
y = Win_Percent_Final)) +
geom_ribbon(aes(x = Win_Percent_Game,
ymin = Win_Percent_Final_Min,
ymax = Win_Percent_Final_Max),
fill = "#eeeeee",
alpha = 0.5) +
theme_minimal() +
theme(text = element_text(family = "Roboto"),
axis.title = element_text(face = "bold",
size = 10),
axis.text = element_text(face = "italic",
size = 8),
panel.background = element_rect(colour = "#000000"),
strip.text = element_text(face = "bold",
size = 8)) #+
# labs(title = 'Game Number: {frame_time}',
#      x = "Current Win Percent",
#      y = "Final Win Percent") +
# transition_time(Game_Number) +
# ease_aes('linear')
schedule_transform_final %>%
filter(Game_Number == 50) %>%
ggplot() +
geom_point(aes(x = Win_Percent_Game,
y = Win_Percent_Final)) +
geom_line(aes(x = Win_Percent_Game,
y = Win_Percent_Final_Min),
fill = "#eeeeee",
alpha = 0.5) +
geom_line(aes(x = Win_Percent_Game,
y = Win_Percent_Final_Max),
fill = "#eeeeee",
alpha = 0.5) +
theme_minimal() +
theme(text = element_text(family = "Roboto"),
axis.title = element_text(face = "bold",
size = 10),
axis.text = element_text(face = "italic",
size = 8),
panel.background = element_rect(colour = "#000000"),
strip.text = element_text(face = "bold",
size = 8)) #+
# labs(title = 'Game Number: {frame_time}',
#      x = "Current Win Percent",
#      y = "Final Win Percent") +
# transition_time(Game_Number) +
# ease_aes('linear')
(schedule_transform_final <-
schedule_transform %>%
left_join(win_percent_by_team_season) %>%
group_by(Game_Number, Win_Number) %>%
mutate(Win_Percent_Final_Min = min(Win_Percent_Final),
Win_Percent_Final_Max = max(Win_Percent_Final)))
schedule_transform_final %>%
filter(Game_Number == 50) %>%
ggplot() +
geom_point(aes(x = Win_Percent_Game,
y = Win_Percent_Final)) +
geom_line(aes(x = Win_Percent_Game,
y = Win_Percent_Final_Min),
fill = "#eeeeee",
alpha = 0.5) +
geom_line(aes(x = Win_Percent_Game,
y = Win_Percent_Final_Max),
fill = "#eeeeee",
alpha = 0.5) +
theme_minimal() +
theme(text = element_text(family = "Roboto"),
axis.title = element_text(face = "bold",
size = 10),
axis.text = element_text(face = "italic",
size = 8),
panel.background = element_rect(colour = "#000000"),
strip.text = element_text(face = "bold",
size = 8)) #+
# labs(title = 'Game Number: {frame_time}',
#      x = "Current Win Percent",
#      y = "Final Win Percent") +
# transition_time(Game_Number) +
# ease_aes('linear')
schedule_transform_final %>%
filter(Game_Number == 30) %>%
ggplot() +
geom_point(aes(x = Win_Percent_Game,
y = Win_Percent_Final)) +
geom_line(aes(x = Win_Percent_Game,
y = Win_Percent_Final_Min),
fill = "#eeeeee",
alpha = 0.5) +
geom_line(aes(x = Win_Percent_Game,
y = Win_Percent_Final_Max),
fill = "#eeeeee",
alpha = 0.5) +
theme_minimal() +
theme(text = element_text(family = "Roboto"),
axis.title = element_text(face = "bold",
size = 10),
axis.text = element_text(face = "italic",
size = 8),
panel.background = element_rect(colour = "#000000"),
strip.text = element_text(face = "bold",
size = 8)) #+
# labs(title = 'Game Number: {frame_time}',
#      x = "Current Win Percent",
#      y = "Final Win Percent") +
# transition_time(Game_Number) +
# ease_aes('linear')
schedule_transform_final %>%
filter(Game_Number == 30) %>%
ggplot() +
geom_point(aes(x = Win_Percent_Game,
y = Win_Percent_Final)) +
geom_ribbon(aes(x = Win_Percent_Game,
ymin = Win_Percent_Final_Min,
ymax = Win_Percent_Final_Max),
fill = "#eeeeee",
alpha = 0.5) +
theme_minimal() +
theme(text = element_text(family = "Roboto"),
axis.title = element_text(face = "bold",
size = 10),
axis.text = element_text(face = "italic",
size = 8),
panel.background = element_rect(colour = "#000000"),
strip.text = element_text(face = "bold",
size = 8)) #+
# labs(title = 'Game Number: {frame_time}',
#      x = "Current Win Percent",
#      y = "Final Win Percent") +
# transition_time(Game_Number) +
# ease_aes('linear')
schedule_transform_final %>%
filter(Game_Number == 30) %>%
ggplot() +
geom_ribbon(aes(x = Win_Percent_Game,
ymin = Win_Percent_Final_Min,
ymax = Win_Percent_Final_Max),
fill = "#eeeeee",
alpha = 0.5) +
geom_point(aes(x = Win_Percent_Game,
y = Win_Percent_Final)) +
theme_minimal() +
theme(text = element_text(family = "Roboto"),
axis.title = element_text(face = "bold",
size = 10),
axis.text = element_text(face = "italic",
size = 8),
panel.background = element_rect(colour = "#000000"),
strip.text = element_text(face = "bold",
size = 8)) #+
# labs(title = 'Game Number: {frame_time}',
#      x = "Current Win Percent",
#      y = "Final Win Percent") +
# transition_time(Game_Number) +
# ease_aes('linear')
schedule_transform_final %>%
filter(Game_Number == 30) %>%
ggplot() +
geom_ribbon(aes(x = Win_Percent_Game,
ymin = Win_Percent_Final_Min,
ymax = Win_Percent_Final_Max),
fill = "#eeeeee",
alpha = 0.5) +
geom_point(aes(x = Win_Percent_Game,
y = Win_Percent_Final),
alpha = 0.8) +
theme_minimal() +
theme(text = element_text(family = "Roboto"),
axis.title = element_text(face = "bold",
size = 10),
axis.text = element_text(face = "italic",
size = 8),
panel.background = element_rect(colour = "#000000"),
strip.text = element_text(face = "bold",
size = 8)) #+
# labs(title = 'Game Number: {frame_time}',
#      x = "Current Win Percent",
#      y = "Final Win Percent") +
# transition_time(Game_Number) +
# ease_aes('linear')
?transition_states
schedule_transform_final %>%
# filter(Game_Number == 30) %>%
ggplot() +
geom_ribbon(aes(x = Win_Percent_Game,
ymin = Win_Percent_Final_Min,
ymax = Win_Percent_Final_Max),
fill = "#eeeeee",
alpha = 0.5) +
geom_point(aes(x = Win_Percent_Game,
y = Win_Percent_Final),
alpha = 0.8,
color = "#e83536") +
theme_minimal() +
theme(text = element_text(family = "Roboto"),
axis.title = element_text(face = "bold",
size = 10),
axis.text = element_text(face = "italic",
size = 8),
panel.background = element_rect(colour = "#000000"),
strip.text = element_text(face = "bold",
size = 8)) +
labs(title = 'Game Number: {frame_time}',
x = "Current Win Percent",
y = "Final Win Percent") +
transition_states(states = Game_Number,
transition_length = 1,
state_length = 2) +
ease_aes('linear')
schedule_transform_final %>%
# filter(Game_Number == 30) %>%
ggplot() +
# geom_ribbon(aes(x = Win_Percent_Game,
#                 ymin = Win_Percent_Final_Min,
#                 ymax = Win_Percent_Final_Max),
#             fill = "#eeeeee",
#             alpha = 0.5) +
geom_point(aes(x = Win_Percent_Game,
y = Win_Percent_Final),
alpha = 0.8,
color = "#e83536") +
theme_minimal() +
theme(text = element_text(family = "Roboto"),
axis.title = element_text(face = "bold",
size = 10),
axis.text = element_text(face = "italic",
size = 8),
panel.background = element_rect(colour = "#000000"),
strip.text = element_text(face = "bold",
size = 8)) +
labs(title = 'Game Number: {frame_time}',
x = "Current Win Percent",
y = "Final Win Percent") +
transition_states(states = Game_Number,
transition_length = 1,
state_length = 2) +
ease_aes('linear')
?transition_time
schedule_transform_final %>%
# filter(Game_Number == 30) %>%
ggplot() +
# geom_ribbon(aes(x = Win_Percent_Game,
#                 ymin = Win_Percent_Final_Min,
#                 ymax = Win_Percent_Final_Max),
#             fill = "#eeeeee",
#             alpha = 0.5) +
geom_point(aes(x = Win_Percent_Game,
y = Win_Percent_Final),
alpha = 0.8,
color = "#e83536") +
theme_minimal() +
theme(text = element_text(family = "Roboto"),
axis.title = element_text(face = "bold",
size = 10),
axis.text = element_text(face = "italic",
size = 8),
panel.background = element_rect(colour = "#000000"),
strip.text = element_text(face = "bold",
size = 8)) +
labs(title = 'Game Number: {frame_time}',
x = "Current Win Percent",
y = "Final Win Percent") +
transition_states(states = Game_Number,
transition_length = 1,
state_length = 2,
frame_time = 2) +
ease_aes('linear')
schedule_transform_final %>%
# filter(Game_Number == 30) %>%
ggplot() +
# geom_ribbon(aes(x = Win_Percent_Game,
#                 ymin = Win_Percent_Final_Min,
#                 ymax = Win_Percent_Final_Max),
#             fill = "#eeeeee",
#             alpha = 0.5) +
geom_point(aes(x = Win_Percent_Game,
y = Win_Percent_Final),
alpha = 0.8,
color = "#e83536") +
theme_minimal() +
theme(text = element_text(family = "Roboto"),
axis.title = element_text(face = "bold",
size = 10),
axis.text = element_text(face = "italic",
size = 8),
panel.background = element_rect(colour = "#000000"),
strip.text = element_text(face = "bold",
size = 8)) +
labs(title = 'Game Number: {closest_state}',
x = "Current Win Percent",
y = "Final Win Percent") +
transition_states(states = Game_Number,
transition_length = 1,
state_length = 2) +
ease_aes('linear')
schedule_transform_final %>%
count(Game_Number)
schedule_transform_final %>%
group_by(Game_Number) %>%
summarise(count = n())
schedule_transform_final %>%
ggplot() +
geom_ribbon(aes(x = Win_Percent_Game,
ymin = Win_Percent_Final_Min,
ymax = Win_Percent_Final_Max),
fill = "#eeeeee",
alpha = 0.5) +
geom_point(aes(x = Win_Percent_Game,
y = Win_Percent_Final),
alpha = 0.8,
color = "#e83536") +
theme_minimal() +
theme(text = element_text(family = "Roboto"),
axis.title = element_text(face = "bold",
size = 10),
axis.text = element_text(face = "italic",
size = 8),
panel.background = element_rect(colour = "#000000"),
strip.text = element_text(face = "bold",
size = 8)) +
labs(title = 'Game Number: {closest_state}',
x = "Current Win Percent",
y = "Final Win Percent") +
transition_states(states = Game_Number,
transition_length = 1,
state_length = 3) +
ease_aes('linear')
devtools:install_github("thomasp85/transformr")
devtools::install_github("thomasp85/transformr")
# devtools::install_github("thomasp85/transformr")
library(transformr)
schedule_transform_final %>%
ggplot() +
geom_ribbon(aes(x = Win_Percent_Game,
ymin = Win_Percent_Final_Min,
ymax = Win_Percent_Final_Max),
fill = "#eeeeee",
alpha = 0.5) +
geom_point(aes(x = Win_Percent_Game,
y = Win_Percent_Final),
alpha = 0.8,
color = "#e83536") +
theme_minimal() +
theme(text = element_text(family = "Roboto"),
axis.title = element_text(face = "bold",
size = 10),
axis.text = element_text(face = "italic",
size = 8),
panel.background = element_rect(colour = "#000000"),
strip.text = element_text(face = "bold",
size = 8)) +
labs(title = 'Game Number: {closest_state}',
x = "Current Win Percent",
y = "Final Win Percent",
caption = "@rharrington31") +
transition_states(states = Game_Number,
transition_length = 1,
state_length = 3) +
ease_aes('linear')
?transition_states
schedule_transform_final %>%
ggplot() +
# geom_ribbon(aes(x = Win_Percent_Game,
#                 ymin = Win_Percent_Final_Min,
#                 ymax = Win_Percent_Final_Max),
#             fill = "#eeeeee",
#             alpha = 0.5) +
geom_point(aes(x = Win_Percent_Game,
y = Win_Percent_Final),
alpha = 0.8,
color = "#e83536") +
theme_minimal() +
theme(text = element_text(family = "Roboto"),
axis.title = element_text(face = "bold",
size = 10),
axis.text = element_text(face = "italic",
size = 8),
panel.background = element_rect(colour = "#000000"),
strip.text = element_text(face = "bold",
size = 8)) +
labs(title = 'Game Number: {closest_state}',
x = "Current Win Percent",
y = "Final Win Percent",
caption = "@rharrington31") +
transition_states(states = Game_Number,
transition_length = 1,
state_length = 30) +
ease_aes('linear')
devtools::install_github("tidyverse/ggplot2")
# devtools::install_github("tidyverse/ggplot2")
library(ggplot2)
schedule_transform_final %>%
ggplot() +
geom_ribbon(aes(x = Win_Percent_Game,
ymin = Win_Percent_Final_Min,
ymax = Win_Percent_Final_Max),
fill = "#eeeeee",
alpha = 0.5) +
geom_point(aes(x = Win_Percent_Game,
y = Win_Percent_Final),
alpha = 0.8,
color = "#e83536") +
theme_minimal() +
theme(text = element_text(family = "Roboto"),
axis.title = element_text(face = "bold",
size = 10),
axis.text = element_text(face = "italic",
size = 8),
panel.background = element_rect(colour = "#000000"),
strip.text = element_text(face = "bold",
size = 8)) +
labs(title = 'Game Number: {closest_state}',
x = "Current Win Percent",
y = "Final Win Percent",
caption = "@rharrington31") +
transition_states(states = Game_Number,
transition_length = 30,
state_length = 30) +
ease_aes('linear')
schedule_transform_final %>%
ggplot() +
geom_ribbon(aes(x = Win_Percent_Game,
ymin = Win_Percent_Final_Min,
ymax = Win_Percent_Final_Max),
fill = "#eeeeee",
alpha = 0.5)
