---
title: "Game Log Scraping"
author: "Ryan Harrington"
output: 
  html_document:
    theme: yeti
    highlight: textmate
    toc: TRUE
    toc_float: TRUE
    df_print: paged
    code_folding: hide
---

# Overview

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, error = FALSE)
```

```{r libraries, message = FALSE, warning = FALSE, error = FALSE}

# install.packages("tidyverse")
library(tidyverse)

# install.packages("rvest")
library(rvest)

# install.packages("readr")
library(readr)

# install.packages("here")
library(here)

```

```{r}

months <- c("october","november","december","january","february","march","april")
years <- seq(from = 1950, to = 2018, by = 1)

```


# Get Schedules

```{r, cache = TRUE}

schedule <- NULL
status <- NULL

for (year in years){
  
  for (month in months){
    
    # Generate URL
    season_month_url <- paste0("https://www.basketball-reference.com/leagues/NBA_",
                               year,"_games-",month,".html")
    
    # Read webpage html
    webpage_check <- try(
      
      season_month_webpage <- read_html(season_month_url)
      , silent = TRUE
      
    )
    
    # Check to see if there was an error. Only perform the function if there wasn't one.
    if (class(webpage_check) == "try-error") {
      
      # DO NOTHING
      message(paste("The webpage",season_month_url,"failed to load."))
      webpage_status <- "Failure"
      
    } else {
      
      webpage_status <- "Successful"
      
      # Pull schedule
      schedule_temp <- 
        season_month_webpage %>%
        html_nodes("#schedule") %>%
        html_table() %>%
        as.data.frame() %>%
        select(Date, "Visitor" = Visitor.Neutral, "Visitor_PTS" = PTS, "Home" = Home.Neutral, "Home_PTS" = PTS.1) %>%
        mutate(Season = year)
      
      # Bind schedule_temp to schedule
      schedule <- rbind(schedule,schedule_temp)
      
      # Status of each webpage
      status_temp <- data.frame(Year = year,
                                Month = month,
                                URL = season_month_url,
                                Status = webpage_status)
      
      # Bind status_temp to status
      status <- rbind(status, status_temp)
      
    }
    
    # Sleep for a bit
    sleep_time <- runif(1) + 3
    Sys.sleep(time = sleep_time)
    
    message(paste("Completed scraping",tools::toTitleCase(month),"of the",year,"season. There are currently",nrow(schedule),"games included in the dataset."))
    
  }
  
}

```

```{r, cache = TRUE}

write_csv(schedule, here("Data","schedule.csv"))

schedule

```

